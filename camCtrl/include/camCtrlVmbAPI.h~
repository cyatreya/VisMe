/*
 * file: camCtrl.h
 *
 * purpose: define the camera control class for hanlding GigE cameras using 
 *          Vimba SDK from Advancded Vision Technologies. Hide the initialization
 *          of the camera handler, enumeration of the cameras, etc. 
 *
 *          Make public only the required access to the cameras (set parameter, capture image etc..)
 *          
 *
 */

#ifndef VISME_CMACTRL_H
#define VISME_CAMCTRL_H

#include <VimbaCPP/Include/VimbaCPP.h>

using namespace AVT::VmbAPI;

namespace VisMe{

  class GigECamera;
  class CamCtrlVmbAPI {

  public:
    CamCtrl(void);
   ~CamCtrl(void);

  private:

    int Init();

    void findCameras();
    void freeCameras();

    VimbaSystem &Vimba; //Note reference! 

    CameraPtrVector m_cameras;
    
    VmbVersionInfo_t m_VimbaVersion;
    VmbInterfaceType m_ifType;
    VmbErrorType err;

  };
  
  class GigECamera: 
  public Camera
  {
  public:
    GigECamera(     const char         *pCameraID,
                    const char         *pCameraName,
                    const char         *pCameraModel,
                    const char         *pCameraSerialNumber,
                    const char         *pInterfaceID,
                    VmbInterfaceType    interfaceType,
                    const char         *pInterfaceName,
                    const char         *pInterfaceSerialNumber,
                    VmbAccessModeType   interfacePermittedAccess );

    void addonGigE( std::string &info );    // custom camera function
  };



}; //namespace VisMe

#endif //VISME_CAMCTRL_H
